// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cache .get() should check for the value in every store 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
  ],
}
`;

exports[`Cache .get() should check for the value in every store 2`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [],
    },
  ],
}
`;

exports[`Cache .get() should check for the value in every store 3`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 2,
        "hitCount": 0,
      },
      "store": Array [],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 2,
        "hitCount": 1,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{\\"expire\\":100}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .get() should not return a value if timeouts 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {
    "timeout": 5,
  },
  "stores": Array [
    MemoryStore {
      "get": [Function],
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .get() should return a Promise<Value> 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 2,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .refresh() should refresh the cache with the returned value 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 1,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{\\"expire\\":10,\\"stale\\":5}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 1,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{\\"expire\\":10,\\"stale\\":5}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is expired 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is expired 2`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 2,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is not in the cache (with cacheOptions) 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is not in the cache (with cacheOptions) 2`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{\\"expire\\":10,\\"stale\\":5}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{\\"expire\\":10,\\"stale\\":5}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is not in the cache 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [],
    },
  ],
}
`;

exports[`Cache .wrap should refresh the value if it is not in the cache 2`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should return the value if it is stale but not expired yet and the wrapped function fails 1`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 1,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should return the value if it is stale but not expired yet and the wrapped function fails 2`] = `
Cache {
  "_events": Object {
    "error": [Function],
  },
  "_eventsCount": 1,
  "_maxListeners": undefined,
  "domain": null,
  "options": Object {},
  "stores": Array [
    MemoryStore {
      "stats": Object {
        "getCount": 2,
        "hitCount": 1,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
    MemoryStore {
      "stats": Object {
        "getCount": 0,
        "hitCount": 0,
      },
      "store": Array [
        Array [
          "key",
          "{\\"value\\":{\\"val\\":1},\\"options\\":{}}",
        ],
      ],
    },
  ],
}
`;

exports[`Cache .wrap should throw an error if error has a noCache=true 1`] = `[Error: error]`;

exports[`Cache .wrap should throw an error if the item is not in cache and the wrapped function fails 1`] = `[Error: error]`;

exports[`Cache .wrap should throw an error if the value in cache is expired and stale and the wrapped function fails 1`] = `[Error: error]`;
